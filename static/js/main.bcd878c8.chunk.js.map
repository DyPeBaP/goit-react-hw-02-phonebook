{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","helpers/filter.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","handleAddContact","this","onSubmit","type","pattern","title","required","onChange","Component","ContactList","contacts","deliteContact","map","contact","onClick","id","Filter","filter","handleChangeFilter","App","some","userName","alert","prevState","shortid","generate","className","toLowerCase","includes","trim","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAEMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAACC,GAAD,OACb,EAAKC,SAAL,eACGD,EAAEE,cAAcL,KAAOG,EAAEE,cAAcC,S,EAG5CC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKC,MAAMC,iBAAiB,EAAKX,OACjC,EAAKK,SAAS,CACZJ,KAAM,GACNC,OAAQ,M,4CAIV,WACE,IAAQC,EAAwDS,KAAxDT,aAAcK,EAA0CI,KAA1CJ,aAAtB,EAAgEI,KAA5BZ,MAASC,EAA7C,EAA6CA,KAAMC,EAAnD,EAAmDA,OACrD,OACE,uBAAMW,SAAUL,EAAhB,UACE,kCACE,qCACA,uBACEM,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUf,EACVI,MAAON,OAGX,kCACE,uCACA,uBACEa,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUf,EACVI,MAAOL,OAGX,wBAAQY,KAAK,SAAb,gC,GAhDkBK,aAsDXpB,ICxDA,SAASqB,EAAT,GAAmD,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,cAC9C,OACE,6BACGD,EAASE,KAAI,SAACC,GAAD,OACZ,+BACE,uCAAUA,EAAQvB,QAClB,yCAAYuB,EAAQtB,UACpB,wBAAQY,KAAK,SAASW,QAAS,kBAAMH,EAAcE,EAAQE,KAA3D,sBAHOF,EAAQE,SCJV,SAASC,EAAT,GAAiD,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,mBACvC,OACE,qCACE,sDACA,uBACEf,KAAK,OACLb,KAAK,SACLM,MAAOqB,EACPV,SAAUW,O,qBCDZC,E,4MACJ9B,MAAQ,CACNqB,SAAU,CACR,CAAEK,GAAI,OAAQzB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEwB,GAAI,OAAQzB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEwB,GAAI,OAAQzB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEwB,GAAI,OAAQzB,KAAM,iBAAkBC,OAAQ,cAEhD0B,OAAQ,I,EAGVjB,iBAAmB,SAACa,GAClB,EAAKxB,MAAMqB,SAASU,MAAK,SAACC,GAAD,OAAcA,EAAS/B,OAASuB,EAAQvB,QAAQgC,MAAM,oDAC/E,EAAK5B,UAAS,SAAC6B,GAAD,MAAgB,CAC5Bb,SAAS,GAAD,mBAAMa,EAAUb,UAAhB,cAA4BK,GAAIS,IAAQC,YAAeZ,U,EAInEF,cAAgB,SAACI,GACf,EAAKrB,SAAS,CACZgB,SAAU,EAAKrB,MAAMqB,SAASO,QAAO,SAACJ,GAAD,OAAaA,EAAQE,KAAOA,Q,EAIrEG,mBAAqB,SAACzB,GACpB,EAAKC,SAAS,CACZuB,OAAQxB,EAAEE,cAAcC,S,4CAI5B,WACE,OACE,sBAAK8B,UAAU,MAAf,UACE,cAAC,EAAD,CAAa1B,iBAAkBC,KAAKD,mBACpC,cAACgB,EAAD,CACEC,OAAQhB,KAAKZ,MAAM4B,OACnBC,mBAAoBjB,KAAKiB,qBAE3B,cAACT,EAAD,CACEC,UC9CqBA,ED8CJT,KAAKZ,MAAMqB,SC9CGO,ED8COhB,KAAKZ,MAAM4B,OC7ClDP,EAASO,QAAO,SAACJ,GAAD,OACrBA,EAAQvB,KAAKqC,cAAcC,SAASX,EAAOY,OAAOF,mBD6C5ChB,cAAeV,KAAKU,mBC/Cf,IAAgBD,EAAUO,M,GDOvBT,aA+CHW,IEjDfW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bcd878c8.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) =>\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.handleAddContact(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n    render() {\r\n      const { handleChange, handleSubmit, state: { name, number } } = this;\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <p>Name</p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n            value={name}\r\n          />\r\n        </label>\r\n        <label>\r\n          <p>Number</p>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n            value={number}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","export default function ContactList({ contacts, deliteContact }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <li key={contact.id}>\r\n          <p>name: {contact.name}</p>\r\n          <p>number: {contact.number}</p>\r\n          <button type=\"button\" onClick={() => deliteContact(contact.id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","export default function Filter({ filter, handleChangeFilter }) {\r\n  return (\r\n    <>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={handleChangeFilter}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { Component } from \"react\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport filter from \"./helpers/filter\";\r\nimport shortid from \"shortid\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  handleAddContact = (contact) => {\r\n    this.state.contacts.some((userName) => userName.name === contact.name) ? alert(\"A user with the same name has already been added\") :\r\n    this.setState((prevState) => ({\r\n      contacts: [...prevState.contacts, { id: shortid.generate(), ...contact }],\r\n    }));\r\n  }\r\n    \r\n  deliteContact = (id) => {\r\n    this.setState({\r\n      contacts: this.state.contacts.filter((contact) => contact.id !== id),\r\n    });\r\n  };\r\n\r\n  handleChangeFilter = (e) => {\r\n    this.setState({\r\n      filter: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <ContactForm handleAddContact={this.handleAddContact} />\r\n        <Filter\r\n          filter={this.state.filter}\r\n          handleChangeFilter={this.handleChangeFilter}\r\n        />\r\n        <ContactList\r\n          contacts={filter(this.state.contacts, this.state.filter)}\r\n          deliteContact={this.deliteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export default function filter(contacts, filter) {\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.trim().toLowerCase())\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}